####################################################
# KERNEL SELF-PROTECTION
#
# A kenel pointer points to a specific location in memory. 
# https://kernsec.org/wiki/index.php/Bug_Classes/Kernel_pointer_leak
# these are not hidden by default.
# Setting this will migate kernel pointer leaks.
# Setting it to 1 can hide kernel pointers from processes without CAP_SYSLOG capability
# ---------------------------------------------------
kernel.ptr_restrict=2
# ---------------------------------------------------
####################################################

####################################################
# DMESG is the kernel log which exposes large amount of useful kenel
# debugging information, but it often can leak sensetive information, such as pointers
# changing this setting to restrict=1 restricts the kernl to log the CAP_SYSLOG
# ---------------------------------------------------
kernel.dmesg_restrict=1
# ---------------------------------------------------
####################################################

####################################################
# Malware are able torecord the screen during boot and maybe able to abuse it
# to gain higher priviledges
# this option prevents information leaks.
# setting it to 3 3 3 3
# ---------------------------------------------------
kernel.printk=3 3 3 3
# ---------------------------------------------------
####################################################

####################################################
# eBPF exposes large attack surface.
# As such it must be restricted
# ---------------------------------------------------
kernel.unpriviledged_bpf_disabled=1
# ---------------------------------------------------
####################################################

####################################################
# This one restrics loading TTY line disciplines to CAP_SYS_MODULE
# to prevent unpriviledge attackers from loading volnerable line disciplines
# with the TIOCSETD ioctl. https://a13xp0p0v.github.io/2017/03/24/CVE-2017-2636.html
# ---------------------------------------------------
dev.tty.ldisc_autoload=0
# ---------------------------------------------------
####################################################

####################################################
# the userfaultfd() syscall from c is often abused to explot use-after-free
# flaws.
# ---------------------------------------------------
vm.unpriviledged_userfaultfd=0
# ---------------------------------------------------
####################################################

####################################################
# kexec is a syscall that is used to boot another kernel during runtime.
# This can be abused to load malicious kernel and gain arbitrary code exec
# in kernel mode.
# ---------------------------------------------------
kernel.kexec_load_disabled=1
# ---------------------------------------------------
####################################################

####################################################
# Performance events add considerable kernel attack 
# surface and have caused abundant vulnerabilities. 
# This sysctl restricts all usage of performance events 
# to the CAP_PERFMON capability 
# (CAP_SYS_ADMIN on kernel versions prior to 5.8).
# ---------------------------------------------------
kernel.pref_event_paranoid=3
# ---------------------------------------------------
####################################################
